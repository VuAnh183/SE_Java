package a1_22BI13012;

import utils.*;

/**
 * @overview
 * @attributes
 * id				Integer		int
 * name				String		string 
 * phoneNumber		String		string
 * address			String		string
 * @objects a typical Student object is s=<i, n, p, a>, where id(i), name(n), phoneNumber(p), address(a)
 * @abstract_properties
 * mutable(id) = false /\ optional(id) = false /\ min(id) = 1 /\ max(id) = 10^9
 * mutable(name) = true /\ optional(name) = false /\ length(name) = 50
 * mutable(phoneNumber) = true /\ optional(phoneNumber) = false /\ length = 10
 * mutable(address) = true /\ optional(address) = false /\ length = 100
 */
public class Student {
	// attributes
	@DomainConstraint(mutable = false, optional = false, min = 1, max = 10^9)
	private int id;
	
	@DomainConstraint(mutable = true, optional = false, length = 50)
	private String name;
	
	@DomainConstraint(mutable = true, optional = false, length = 10)
	private String phoneNumber;
	
	@DomainConstraint(mutable = true, optional = false, length = 100)
	private String address;
	
	// methods
	/*
	 * @modifies this.id, this.name, this.phoneNumber, this.address
	 * @effects <pre>
	 * if id, name, phoneNumber, address are valid
	 * 		initialize this as <id, name, phoneNumber, address>
	 * else
	 * 		throw NotPossibleException
	 * </pre>
	 */
	public Student(
			@AttrRef("id") int id,
			@AttrRef("name") String name,
			@AttrRef("phoneNumber") String phoneNumber,
			@AttrRef("address") String address)
			throws NotPossibleException {
		//TODO: check attributes validation
		this.id = id;
		this.name = name;
		this.phoneNumber = phoneNumber;
		this.address = address;
	}
	
	// getters
	/*
	 * @effect return this.id, this.name, this.phoneNumber, this.address
	 */
	@DOpt(type = OptType.Observer) @AttrRef("id")
	public int getId() {
		return this.id;
	}
}
